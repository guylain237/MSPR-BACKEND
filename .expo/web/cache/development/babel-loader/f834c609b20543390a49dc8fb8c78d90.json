{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _sheet = _interopRequireDefault(require(\"./sheet\"));\nvar _style = _interopRequireDefault(require(\"./style\"));\nvar _value = _interopRequireDefault(require(\"./value\"));\nvar _vars = _interopRequireDefault(require(\"./replacers/vars\"));\nvar _mediaQueries = _interopRequireDefault(require(\"./replacers/media-queries\"));\nvar _child = _interopRequireDefault(require(\"./child\"));\nvar BUILD_EVENT = 'build';\nvar EStyleSheet = function () {\n  function EStyleSheet() {\n    (0, _classCallCheck2.default)(this, EStyleSheet);\n    this.child = _child.default;\n    this.builded = false;\n    this.sheets = [];\n    this.globalVars = null;\n    this.listeners = {};\n    this._proxyToOriginal();\n  }\n  (0, _createClass2.default)(EStyleSheet, [{\n    key: \"create\",\n    value: function create(obj) {\n      var sheet = new _sheet.default(obj);\n      this.sheets.push(sheet);\n      if (this.builded) {\n        sheet.calc(this.globalVars);\n      }\n      return sheet.getResult();\n    }\n  }, {\n    key: \"build\",\n    value: function build(rawGlobalVars) {\n      this.builded = true;\n      this._calcGlobalVars(rawGlobalVars);\n      this._calcSheets();\n      this._callListeners(BUILD_EVENT);\n    }\n  }, {\n    key: \"value\",\n    value: function value(expr, prop) {\n      var varsArr = this.globalVars ? [this.globalVars] : [];\n      return new _value.default(expr, prop, varsArr).calc();\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(event, listener) {\n      this._assertSubscriptionParams(event, listener);\n      this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT] || [];\n      this.listeners[BUILD_EVENT].push(listener);\n      if (this.builded) {\n        listener();\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(event, listener) {\n      this._assertSubscriptionParams(event, listener);\n      if (this.listeners[BUILD_EVENT]) {\n        this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT].filter(function (item) {\n          return item !== listener;\n        });\n      }\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.sheets.forEach(function (sheet) {\n        return sheet.clearCache();\n      });\n    }\n  }, {\n    key: \"_calcGlobalVars\",\n    value: function _calcGlobalVars(rawGlobalVars) {\n      if (rawGlobalVars) {\n        this._checkGlobalVars(rawGlobalVars);\n        rawGlobalVars.$theme = rawGlobalVars.$theme || 'default';\n        this.globalVars = new _style.default(rawGlobalVars, [rawGlobalVars]).calc().calculatedVars;\n      }\n    }\n  }, {\n    key: \"_calcSheets\",\n    value: function _calcSheets() {\n      var _this = this;\n      this.sheets.forEach(function (sheet) {\n        return sheet.calc(_this.globalVars);\n      });\n    }\n  }, {\n    key: \"_callListeners\",\n    value: function _callListeners(event) {\n      if (Array.isArray(this.listeners[event])) {\n        this.listeners[event].forEach(function (listener) {\n          return listener();\n        });\n      }\n    }\n  }, {\n    key: \"_proxyToOriginal\",\n    value: function _proxyToOriginal() {\n      var _this2 = this;\n      var props = ['setStyleAttributePreprocessor', 'hairlineWidth', 'absoluteFill', 'absoluteFillObject', 'flatten'];\n      props.forEach(function (prop) {\n        Object.defineProperty(_this2, prop, {\n          get: function get() {\n            return _reactNative.StyleSheet[prop];\n          },\n          enumerable: true\n        });\n      });\n    }\n  }, {\n    key: \"_checkGlobalVars\",\n    value: function _checkGlobalVars(rawGlobalVars) {\n      Object.keys(rawGlobalVars).forEach(function (key) {\n        if (!_vars.default.isVar(key) && !_mediaQueries.default.isMediaQuery(key)) {\n          throw new Error(\"EStyleSheet.build() params should contain global variables (start with $) \" + (\"or media queries (start with @media). Got '\" + key + \"'.\"));\n        }\n      });\n    }\n  }, {\n    key: \"_assertSubscriptionParams\",\n    value: function _assertSubscriptionParams(event, listener) {\n      if (event !== BUILD_EVENT) {\n        throw new Error(\"Only '\" + BUILD_EVENT + \"' event is currently supported.\");\n      }\n      if (typeof listener !== 'function') {\n        throw new Error('Listener should be a function.');\n      }\n    }\n  }]);\n  return EStyleSheet;\n}();\nexports.default = EStyleSheet;","map":{"version":3,"names":["_reactNative","require","_sheet","_interopRequireDefault","_style","_value","_vars","_mediaQueries","_child","BUILD_EVENT","EStyleSheet","_classCallCheck2","default","child","builded","sheets","globalVars","listeners","_proxyToOriginal","_createClass2","key","value","create","obj","sheet","Sheet","push","calc","getResult","build","rawGlobalVars","_calcGlobalVars","_calcSheets","_callListeners","expr","prop","varsArr","Value","subscribe","event","listener","_assertSubscriptionParams","unsubscribe","filter","item","clearCache","forEach","_checkGlobalVars","$theme","Style","calculatedVars","_this","Array","isArray","_this2","props","Object","defineProperty","get","StyleSheet","enumerable","keys","vars","isVar","mq","isMediaQuery","Error","exports"],"sources":["C:/Users/guyla/Desktop/ios/react/node_modules/react-native-extended-stylesheet/src/api.js"],"sourcesContent":["/**\n * Extended StyleSheet API\n */\n\nimport {StyleSheet} from 'react-native';\nimport Sheet from './sheet';\nimport Style from './style';\nimport Value from './value';\nimport vars from './replacers/vars';\nimport mq from './replacers/media-queries';\nimport child from './child';\n\nconst BUILD_EVENT = 'build';\n\nexport default class EStyleSheet {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.child = child;\n    this.builded = false;\n    this.sheets = [];\n    this.globalVars = null;\n    this.listeners = {};\n    this._proxyToOriginal();\n  }\n\n  /**\n   * Creates stylesheet that will be calculated after build\n   * @param {Object} obj\n   * @returns {Object}\n   */\n  create(obj) {\n    const sheet = new Sheet(obj);\n    // todo: add options param to allow create dynamic stylesheets that should not be stored\n    this.sheets.push(sheet);\n    if (this.builded) {\n      sheet.calc(this.globalVars);\n    }\n    return sheet.getResult();\n  }\n\n  /**\n   * Builds all created stylesheets with passed variables\n   * @param {Object} [rawGlobalVars]\n   */\n  build(rawGlobalVars) {\n    this.builded = true;\n    this._calcGlobalVars(rawGlobalVars);\n    this._calcSheets();\n    this._callListeners(BUILD_EVENT);\n  }\n\n  /**\n   * Calculates particular value. For some values you need to pass prop (e.g. percent)\n   * @param {*} expr\n   * @param {String} [prop]\n   * @returns {*}\n   */\n  value(expr, prop) {\n    let varsArr = this.globalVars ? [this.globalVars] : [];\n    return new Value(expr, prop, varsArr).calc();\n  }\n\n  /**\n   * Subscribe to event. Currently only 'build' event is supported.\n   * @param {String} event\n   * @param {Function} listener\n   */\n  subscribe(event, listener) {\n    this._assertSubscriptionParams(event, listener);\n    this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT] || [];\n    this.listeners[BUILD_EVENT].push(listener);\n    if (this.builded) {\n      listener();\n    }\n  }\n\n  /**\n   * Unsubscribe from event. Currently only 'build' event is supported.\n   * @param {String} event\n   * @param {Function} listener\n   */\n  unsubscribe(event, listener) {\n    this._assertSubscriptionParams(event, listener);\n    if (this.listeners[BUILD_EVENT]) {\n      this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT].filter(item => item !== listener);\n    }\n  }\n\n  /**\n   * Clears all cached styles.\n   */\n  clearCache() {\n    this.sheets.forEach(sheet => sheet.clearCache());\n  }\n\n  // todo: move global vars stuff to separate module\n  _calcGlobalVars(rawGlobalVars) {\n    if (rawGlobalVars) {\n      this._checkGlobalVars(rawGlobalVars);\n      // $theme is system variable used for caching\n      rawGlobalVars.$theme = rawGlobalVars.$theme || 'default';\n      this.globalVars = new Style(rawGlobalVars, [rawGlobalVars]).calc().calculatedVars;\n    }\n  }\n\n  _calcSheets() {\n    this.sheets.forEach(sheet => sheet.calc(this.globalVars));\n  }\n\n  _callListeners(event) {\n    if (Array.isArray(this.listeners[event])) {\n      this.listeners[event].forEach(listener => listener());\n    }\n  }\n\n  _proxyToOriginal() {\n    // see: https://facebook.github.io/react-native/docs/stylesheet.html\n    const props = [\n      'setStyleAttributePreprocessor',\n      'hairlineWidth',\n      'absoluteFill',\n      'absoluteFillObject',\n      'flatten',\n    ];\n    props.forEach(prop => {\n      Object.defineProperty(this, prop, {\n        get: () => StyleSheet[prop],\n        enumerable: true,\n      });\n    });\n  }\n\n  _checkGlobalVars(rawGlobalVars) {\n    Object.keys(rawGlobalVars).forEach(key => {\n      if (!vars.isVar(key) && !mq.isMediaQuery(key)) {\n        throw new Error(\n          `EStyleSheet.build() params should contain global variables (start with $) ` +\n          `or media queries (start with @media). Got '${key}'.`\n        );\n      }\n    });\n  }\n\n  _assertSubscriptionParams(event, listener) {\n    if (event !== BUILD_EVENT) {\n      throw new Error(`Only '${BUILD_EVENT}' event is currently supported.`);\n    }\n    if (typeof listener !== 'function') {\n      throw new Error('Listener should be a function.');\n    }\n  }\n}\n"],"mappings":";;;;;;;AAIA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,MAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,KAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,aAAA,GAAAJ,sBAAA,CAAAF,OAAA;AACA,IAAAO,MAAA,GAAAL,sBAAA,CAAAF,OAAA;AAEA,IAAMQ,WAAW,GAAG,OAAO;AAAC,IAEPC,WAAW;EAI9B,SAAAA,YAAA,EAAc;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,WAAA;IACZ,IAAI,CAACG,KAAK,GAAGA,cAAK;IAClB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAAC,IAAAC,aAAA,CAAAP,OAAA,EAAAF,WAAA;IAAAU,GAAA;IAAAC,KAAA,EAOD,SAAAC,OAAOC,GAAG,EAAE;MACV,IAAMC,KAAK,GAAG,IAAIC,cAAK,CAACF,GAAG,CAAC;MAE5B,IAAI,CAACR,MAAM,CAACW,IAAI,CAACF,KAAK,CAAC;MACvB,IAAI,IAAI,CAACV,OAAO,EAAE;QAChBU,KAAK,CAACG,IAAI,CAAC,IAAI,CAACX,UAAU,CAAC;MAC7B;MACA,OAAOQ,KAAK,CAACI,SAAS,EAAE;IAC1B;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAMD,SAAAQ,MAAMC,aAAa,EAAE;MACnB,IAAI,CAAChB,OAAO,GAAG,IAAI;MACnB,IAAI,CAACiB,eAAe,CAACD,aAAa,CAAC;MACnC,IAAI,CAACE,WAAW,EAAE;MAClB,IAAI,CAACC,cAAc,CAACxB,WAAW,CAAC;IAClC;EAAC;IAAAW,GAAA;IAAAC,KAAA,EAQD,SAAAA,MAAMa,IAAI,EAAEC,IAAI,EAAE;MAChB,IAAIC,OAAO,GAAG,IAAI,CAACpB,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU,CAAC,GAAG,EAAE;MACtD,OAAO,IAAIqB,cAAK,CAACH,IAAI,EAAEC,IAAI,EAAEC,OAAO,CAAC,CAACT,IAAI,EAAE;IAC9C;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAOD,SAAAiB,UAAUC,KAAK,EAAEC,QAAQ,EAAE;MACzB,IAAI,CAACC,yBAAyB,CAACF,KAAK,EAAEC,QAAQ,CAAC;MAC/C,IAAI,CAACvB,SAAS,CAACR,WAAW,CAAC,GAAG,IAAI,CAACQ,SAAS,CAACR,WAAW,CAAC,IAAI,EAAE;MAC/D,IAAI,CAACQ,SAAS,CAACR,WAAW,CAAC,CAACiB,IAAI,CAACc,QAAQ,CAAC;MAC1C,IAAI,IAAI,CAAC1B,OAAO,EAAE;QAChB0B,QAAQ,EAAE;MACZ;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EAOD,SAAAqB,YAAYH,KAAK,EAAEC,QAAQ,EAAE;MAC3B,IAAI,CAACC,yBAAyB,CAACF,KAAK,EAAEC,QAAQ,CAAC;MAC/C,IAAI,IAAI,CAACvB,SAAS,CAACR,WAAW,CAAC,EAAE;QAC/B,IAAI,CAACQ,SAAS,CAACR,WAAW,CAAC,GAAG,IAAI,CAACQ,SAAS,CAACR,WAAW,CAAC,CAACkC,MAAM,CAAC,UAAAC,IAAI;UAAA,OAAIA,IAAI,KAAKJ,QAAQ;QAAA,EAAC;MAC7F;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EAKD,SAAAwB,WAAA,EAAa;MACX,IAAI,CAAC9B,MAAM,CAAC+B,OAAO,CAAC,UAAAtB,KAAK;QAAA,OAAIA,KAAK,CAACqB,UAAU,EAAE;MAAA,EAAC;IAClD;EAAC;IAAAzB,GAAA;IAAAC,KAAA,EAGD,SAAAU,gBAAgBD,aAAa,EAAE;MAC7B,IAAIA,aAAa,EAAE;QACjB,IAAI,CAACiB,gBAAgB,CAACjB,aAAa,CAAC;QAEpCA,aAAa,CAACkB,MAAM,GAAGlB,aAAa,CAACkB,MAAM,IAAI,SAAS;QACxD,IAAI,CAAChC,UAAU,GAAG,IAAIiC,cAAK,CAACnB,aAAa,EAAE,CAACA,aAAa,CAAC,CAAC,CAACH,IAAI,EAAE,CAACuB,cAAc;MACnF;IACF;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EAED,SAAAW,YAAA,EAAc;MAAA,IAAAmB,KAAA;MACZ,IAAI,CAACpC,MAAM,CAAC+B,OAAO,CAAC,UAAAtB,KAAK;QAAA,OAAIA,KAAK,CAACG,IAAI,CAACwB,KAAI,CAACnC,UAAU,CAAC;MAAA,EAAC;IAC3D;EAAC;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAY,eAAeM,KAAK,EAAE;MACpB,IAAIa,KAAK,CAACC,OAAO,CAAC,IAAI,CAACpC,SAAS,CAACsB,KAAK,CAAC,CAAC,EAAE;QACxC,IAAI,CAACtB,SAAS,CAACsB,KAAK,CAAC,CAACO,OAAO,CAAC,UAAAN,QAAQ;UAAA,OAAIA,QAAQ,EAAE;QAAA,EAAC;MACvD;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EAED,SAAAH,iBAAA,EAAmB;MAAA,IAAAoC,MAAA;MAEjB,IAAMC,KAAK,GAAG,CACZ,+BAA+B,EAC/B,eAAe,EACf,cAAc,EACd,oBAAoB,EACpB,SAAS,CACV;MACDA,KAAK,CAACT,OAAO,CAAC,UAAAX,IAAI,EAAI;QACpBqB,MAAM,CAACC,cAAc,CAACH,MAAI,EAAEnB,IAAI,EAAE;UAChCuB,GAAG,EAAE,SAAAA,IAAA;YAAA,OAAMC,uBAAU,CAACxB,IAAI,CAAC;UAAA;UAC3ByB,UAAU,EAAE;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EAAC;IAAAxC,GAAA;IAAAC,KAAA,EAED,SAAA0B,iBAAiBjB,aAAa,EAAE;MAC9B0B,MAAM,CAACK,IAAI,CAAC/B,aAAa,CAAC,CAACgB,OAAO,CAAC,UAAA1B,GAAG,EAAI;QACxC,IAAI,CAAC0C,aAAI,CAACC,KAAK,CAAC3C,GAAG,CAAC,IAAI,CAAC4C,qBAAE,CAACC,YAAY,CAAC7C,GAAG,CAAC,EAAE;UAC7C,MAAM,IAAI8C,KAAK,CACb,gIAC8C9C,GAAG,QAAI,CACtD;QACH;MACF,CAAC,CAAC;IACJ;EAAC;IAAAA,GAAA;IAAAC,KAAA,EAED,SAAAoB,0BAA0BF,KAAK,EAAEC,QAAQ,EAAE;MACzC,IAAID,KAAK,KAAK9B,WAAW,EAAE;QACzB,MAAM,IAAIyD,KAAK,YAAUzD,WAAW,qCAAkC;MACxE;MACA,IAAI,OAAO+B,QAAQ,KAAK,UAAU,EAAE;QAClC,MAAM,IAAI0B,KAAK,CAAC,gCAAgC,CAAC;MACnD;IACF;EAAC;EAAA,OAAAxD,WAAA;AAAA;AAAAyD,OAAA,CAAAvD,OAAA,GAAAF,WAAA"},"metadata":{},"sourceType":"script"}